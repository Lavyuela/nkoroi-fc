rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isSignedIn() && 
             exists(/databases/$(database)/documents/roles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Users collection - users can read their own data, admins can read all
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Roles collection - users can read their own role, admins can manage all
    match /roles/{userId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Matches collection - everyone can read, admins can write
    match /matches/{matchId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Updates collection - everyone can read, admins can write
    match /updates/{updateId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Players collection - everyone can read, admins can write
    match /players/{playerId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Notifications collection - admins can write, users can read their own
    match /notifications/{notificationId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Predictions collection - users can manage their own predictions
    match /predictions/{predictionId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
    
    // Favorites collection - users can manage their own favorites
    match /favorites/{favoriteId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }
  }
}
